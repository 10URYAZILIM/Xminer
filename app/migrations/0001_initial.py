# Generated by Django 2.0.3 on 2018-03-18 01:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(default=None, upload_to='users', verbose_name='Profil Fotoğrafı')),
                ('hesap', models.FloatField(default=0, verbose_name='Hesap')),
                ('tel', models.CharField(default='(000) 000 00 00', max_length=20, verbose_name='Cep Telefonu')),
                ('tc_no', models.CharField(default='00000000000', max_length=11, verbose_name='T.C Kimlik Numarası')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='machine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='machine', verbose_name='Görsel')),
                ('model', models.CharField(max_length=50, verbose_name='Model')),
                ('properties', models.TextField(verbose_name='Özellikler')),
                ('fiyat', models.FloatField(verbose_name='Fiyat')),
                ('miner_power', models.FloatField(verbose_name='Kazım Gücü')),
                ('miner_power_rate', models.CharField(choices=[('TH', 'TH/s'), ('GH', 'GH/s'), ('MH', 'MH/s')], max_length=10, verbose_name='Kazım Güç Türü')),
                ('warranty', models.CharField(choices=[('3 AY', '3 AY'), ('6 AY', '6 AY'), ('9 AY', '9 AY'), ('12 AY', '12 AY'), ('18 AY', '18 AY'), ('24 AY', '24 AY')], max_length=25, verbose_name='Garanti Süresi')),
                ('lifetime', models.IntegerField(choices=[('1 YIL', 1), ('2 YIL', 2)], verbose_name='Kullanım Ömrü')),
            ],
        ),
        migrations.CreateModel(
            name='news',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.CharField(max_length=400, verbose_name='Kısa Yazı')),
                ('title', models.CharField(max_length=200, verbose_name='Başlık')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Zaman')),
            ],
        ),
        migrations.CreateModel(
            name='TheMachineGain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Zaman')),
                ('gain', models.FloatField(verbose_name='Kazanç')),
                ('machine', models.ForeignKey(on_delete=False, to='app.machine', verbose_name='Makina Modeli')),
            ],
        ),
        migrations.CreateModel(
            name='user_machine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Makina Alım Zamanı')),
                ('machine_dead', models.DateTimeField(auto_now_add=True, verbose_name='Makine Ölüm Zamanı')),
                ('miner_power', models.FloatField(verbose_name='Kazım Gücü')),
                ('miner_power_rate', models.CharField(choices=[('TH', 'TH/s'), ('GH', 'GH/s'), ('MH', 'MH/s')], max_length=10, verbose_name='Kazım Güç Türü')),
                ('fiyat', models.FloatField(verbose_name='Fiyat')),
                ('machine', models.ForeignKey(on_delete=False, to='app.machine')),
                ('user', models.ForeignKey(on_delete=False, related_name='usermachine', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='user_machine_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('pay', models.FloatField(default=0, verbose_name='Kazanç')),
                ('machine', models.ForeignKey(on_delete=False, to='app.machine')),
                ('user', models.ForeignKey(on_delete=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
